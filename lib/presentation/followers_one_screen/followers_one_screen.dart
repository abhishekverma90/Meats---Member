import '../followers_one_screen/widgets/followers_one_item_widget.dart';import 'controller/followers_one_controller.dart';import 'models/followers_one_item_model.dart';import 'package:flutter/material.dart';import 'package:meats_member/core/app_export.dart';import 'package:meats_member/presentation/cart_page/cart_page.dart';import 'package:meats_member/presentation/home_page/home_page.dart';import 'package:meats_member/presentation/i_am_buying_one_tab_container_page/i_am_buying_one_tab_container_page.dart';import 'package:meats_member/presentation/new_notifications_page/new_notifications_page.dart';import 'package:meats_member/widgets/app_bar/appbar_image.dart';import 'package:meats_member/widgets/app_bar/appbar_subtitle.dart';import 'package:meats_member/widgets/app_bar/custom_app_bar.dart';import 'package:meats_member/widgets/custom_bottom_bar.dart';class FollowersOneScreen extends GetWidget<FollowersOneController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, appBar: CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 42, leading: AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgArrowleftGray900, margin: getMargin(left: 18), onTap: onTapArrowleft44), title: AppbarSubtitle(text: "lbl_followers".tr, margin: getMargin(left: 11)), actions: [AppbarImage(height: getVerticalSize(20.00), width: getHorizontalSize(16.00), svgPath: ImageConstant.imgUploadBlueGray300, margin: getMargin(left: 20, top: 2, right: 20, bottom: 2))]), body: SizedBox(width: size.width, child: SingleChildScrollView(child: Container(width: size.width, margin: getMargin(top: 14), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(513.00), width: size.width, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.topCenter, child: Container(height: getVerticalSize(1.00), width: size.width, decoration: BoxDecoration(color: ColorConstant.gray300))), Align(alignment: Alignment.center, child: Container(width: size.width, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Obx(() => ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Container(height: getVerticalSize(1.00), width: size.width, decoration: BoxDecoration(color: ColorConstant.gray300));}, itemCount: controller.followersOneModelObj.value.followersOneItemList.length, itemBuilder: (context, index) {FollowersOneItemModel model = controller.followersOneModelObj.value.followersOneItemList[index]; return FollowersOneItemWidget(model);})), Container(height: getVerticalSize(1.00), width: size.width, decoration: BoxDecoration(color: ColorConstant.gray300))])))])), Container(height: getVerticalSize(80.00), width: size.width, margin: getMargin(top: 129), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.bottomCenter, child: Container(width: size.width, padding: getPadding(left: 163, top: 8, right: 163, bottom: 8), decoration: AppDecoration.fillWhiteA700.copyWith(borderRadius: BorderRadiusStyle.customBorderTL16), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgRectangle, height: getVerticalSize(5.00), width: getHorizontalSize(48.00), radius: BorderRadius.circular(getHorizontalSize(2.00)), margin: getMargin(bottom: 3))]))), Align(alignment: Alignment.bottomCenter, child: Container(width: size.width, padding: getPadding(left: 163, top: 8, right: 163, bottom: 8), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgRectangle, height: getVerticalSize(5.00), width: getHorizontalSize(48.00), radius: BorderRadius.circular(getHorizontalSize(2.00)), margin: getMargin(bottom: 3))])))]))])))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homePage; case BottomBarEnum.Search: return AppRoutes.newNotificationsPage; case BottomBarEnum.Social: return AppRoutes.iAmBuyingOneTabContainerPage; case BottomBarEnum.Cart: return AppRoutes.cartPage; case BottomBarEnum.Account: return "/"; default: return "/";} } 
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homePage: return HomePage(); case AppRoutes.newNotificationsPage: return NewNotificationsPage(); case AppRoutes.iAmBuyingOneTabContainerPage: return IAmBuyingOneTabContainerPage(); case AppRoutes.cartPage: return CartPage(); default: return DefaultWidget();} } 
onTapArrowleft44() { Get.back(); } 
 }
